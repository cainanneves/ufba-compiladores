S' -> S
S -> dec VAR dec INICIO cod FIM

dec -> line1 dec
dec -> line1
line1 -> tipo : lista_ids .
line1 -> VET tipo : id num .
lista_ids -> lista_ids ; id
lista_ids -> id

prot -> line2 prot
prot -> funcoes
line2 -> FUNCAO id ( lista_vars ) : tipo .

funcoes -> line3 funcoes
funcoes -> ''
line3 -> FUNCAO id ( lista_vars ) : tipo VAR dec INICIO cod FIM
lista_vars -> lista_vars ; vars
vars -> tipo : id
vars -> vet tipo : id

cod -> cod line
cod -> line
line -> atrib .
line -> read .
line -> write .
line -> rec .
line -> chama .
line -> PARE .
line -> desv
line -> rep

atrib -> id <- arit
atrib -> id [ arit ] <- arit

arit -> first
first -> first + secon
first -> first - secon
first -> secon
secon -> third * secon
secon -> third / secon
secon -> third % secon
secon -> third
third -> forth ** third
third -> forth
forth -> ( arit )
forth -> vaar
forth -> chama

vaar -> id
vaar -> id [ arit ]

rela -> arit op arit
op -> <
op -> >
op -> <=
op -> >=
op -> =
op -> <>

rcomp -> or
or -> or | and
or -> and
and -> and & neg
and -> neg
neg -> ! neg
neg -> prt
prt -> ( or )
prt -> rela

desv -> SE rcomp INICIO cod FIM
desv -> SE rcomp INICIO cod FIM SENAO rcomp INICIO cod FIM

rep -> ENQUANTO rcomp INICIO cod FIM
rep -> PARA id DE arit ATEH arit INICIO cod FIM

read -> LEIA lista_ids

write -> ESCREVA lista_el
lista_el -> elem ; lista_el
lista_el -> elem
elem -> arit
elem -> const

chama -> id ( lista_ids )

rec -> RECEBA ( arit )
rec -> RECEBA

const -> num
const -> str
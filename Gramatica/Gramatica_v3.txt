S' -> S
S -> DEC PROT FUNC VAR DEC INICIO COD FIM

COD -> COD LINE
COD -> LINE
LINE -> ATRI .
LINE -> DES
LINE -> REP
LINE -> RW .
LINE -> REC .
LINE -> CHAMA .
LINE -> PARE .

DEC -> DEC LINE1
DEC -> LINE1
LINE1 -> TIPO : LISTA_IDS .
LINE1 -> VET TIPO : ID NUM .
LISTA_IDS -> LISTA_IDS ; ID
LISTA_IDS -> ID

ATRI -> ID <- ARIT
ATRI -> ID [ ARIT ] <- ARIT

ARIT -> FIR
FIR -> FIR + SEC
FIR -> FIR - SEC
FIR -> SEC
SEC -> SEC * THI
SEC -> SEC / THI
SEC -> SEC % THI
SEC -> THI
THI -> THI ** FOR
THI -> FOR
FOR -> ( ARIT )
FOR -> VARI
FOR -> CHAMA

VARI -> ID
VARI -> ID [ ARIT ]

REL -> ARIT OP ARIT
OP -> <
OP -> >
OP -> <=
OP -> >=
OP -> =
OP -> <>

RCOMP -> OR
OR -> OR | AND
OR -> AND
AND -> AND & NEG
AND -> NEG
NEG -> ! NEG
NEG -> PAR
PAR -> ( OR )
PAR -> REL

DES -> SE RCOMP INICIO COD FIM
DES -> SE RCOMP INICIO COD FIM SENAO RCOMP INICIO COD FIM

REP -> ENQUANTO RCOMP INICIO COD FIM
REP -> PARA ID DE ARIT ATEH ARIT INICIO COD FIM

LEITURA -> LEIA LISTA_IDS

ESCRITA -> ESCREVA LISTA_EL
LISTA_EL -> LISTA_EL ; ELEM
LISTA_EL -> ELEM
ELEM -> ARIT
ELEM -> VARI
ELEM -> CONST

PROT -> PROT LINE2
PROT -> LINE2 
LINE2 -> FUNCAO ID ( LISTA_VARS ) : TIPO .
LISTA_VARS -> LISTA_VARS ; VARS
VARS -> TIPO : ID
VARS -> VET TIPO : ID

FUNC -> FUNC LINE3
FUNC -> LINE3
LINE3 -> FUNCAO ID ( LISTA_VARS ) : TIPO VAR DEC INICIO COD FIM

CHAMA -> ID ( LISTA_IDS )

CONST -> NUM
CONST -> STR